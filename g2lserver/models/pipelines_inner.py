# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from g2lserver.models.base_model_ import Model
from g2lserver import util


class PipelinesInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, pipeline: str=None, score: float=None):  # noqa: E501
        """PipelinesInner - a model defined in Swagger

        :param id: The id of this PipelinesInner.  # noqa: E501
        :type id: str
        :param pipeline: The pipeline of this PipelinesInner.  # noqa: E501
        :type pipeline: str
        :param score: The score of this PipelinesInner.  # noqa: E501
        :type score: float
        """
        self.swagger_types = {
            'id': str,
            'pipeline': str,
            'score': float
        }

        self.attribute_map = {
            'id': 'id',
            'pipeline': 'pipeline',
            'score': 'score'
        }

        self._id = id
        self._pipeline = pipeline
        self._score = score

    @classmethod
    def from_dict(cls, dikt) -> 'PipelinesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Pipelines_inner of this PipelinesInner.  # noqa: E501
        :rtype: PipelinesInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this PipelinesInner.


        :return: The id of this PipelinesInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PipelinesInner.


        :param id: The id of this PipelinesInner.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def pipeline(self) -> str:
        """Gets the pipeline of this PipelinesInner.


        :return: The pipeline of this PipelinesInner.
        :rtype: str
        """
        return self._pipeline

    @pipeline.setter
    def pipeline(self, pipeline: str):
        """Sets the pipeline of this PipelinesInner.


        :param pipeline: The pipeline of this PipelinesInner.
        :type pipeline: str
        """
        if pipeline is None:
            raise ValueError("Invalid value for `pipeline`, must not be `None`")  # noqa: E501

        self._pipeline = pipeline

    @property
    def score(self) -> float:
        """Gets the score of this PipelinesInner.


        :return: The score of this PipelinesInner.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score: float):
        """Sets the score of this PipelinesInner.


        :param score: The score of this PipelinesInner.
        :type score: float
        """

        self._score = score
